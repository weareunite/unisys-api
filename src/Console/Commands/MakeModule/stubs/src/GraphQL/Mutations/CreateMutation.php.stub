<?php

namespace DummyNamespace\GraphQL\Mutations;

use DummyNamespace\DummyModelRepository;
use GraphQL;
use GraphQL\Type\Definition\Type;
use Unite\UnisysApi\GraphQL\Mutations\CreateMutation as BaseCreateMutation;
use Illuminate\Database\Eloquent\Model;
use Unite\UnisysApi\Modules\Properties\Contracts\HasProperties;

class CreateMutation extends BaseCreateMutation
{
    protected $attributes = [
        'name' => 'createDummyModel',
    ];

    public function repositoryClass()
    : string
    {
        return DummyModelRepository::class;
    }

    public function type()
    {
        return GraphQL::type('DummyModel');
    }

    public function args()
    {
        return [
            'name'       => [
                'type'  => Type::string(),
                'rules' => [
                    'required',
                    'string',
                ],
            ],
            'properties' => [
                'type'  => Type::listOf(Type::nonNull(GraphQL::type('Property'))),
                'rules' => 'array',
            ],
        ];
    }

    protected function afterCreate(Model $model, $root, $args)
    {
        /** @var $model HasProperties */
        foreach ($args['properties'] as $property) {
            $model->addProperty($property['key'], $property['value']);
        }
    }
}
