<?php

namespace DummyNamespace\GraphQL\Mutations;

use DummyNamespace\DummyModelRepository;
use Unite\UnisysApi\Modules\GraphQL\GraphQL\Mutations\UpdateMutation as BaseUpdateMutation;
use GraphQL\Type\Definition\Type;
use Unite\UnisysApi\Modules\Properties\Contracts\HasProperties;
use Illuminate\Database\Eloquent\Model;
use Rebing\GraphQL\Support\Facades\GraphQL;

class UpdateMutation extends BaseUpdateMutation
{
    protected $attributes = [
        'name' => 'updateDummyModel',
    ];

    public function repositoryClass()
    : string
    {
        return DummyModelRepository::class;
    }

    public function args()
    {
        return array_merge(parent::args(), [
            'name'              => [
                'type'  => Type::string(),
                'rules' => [
                    'string',
                ],
            ],
            'properties' => [
                'type'  => Type::listOf(Type::nonNull(GraphQL::type('Property'))),
            ],
        ]);
    }

    protected function afterUpdate(Model $model, $root, $args)
    {
        /** @var $model HasProperties */
        foreach ($args['properties'] as $property) {
            $model->addOrUpdateProperty($property['key'], $property['value']);
        }
    }
}
